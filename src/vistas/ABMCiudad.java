/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vistas;

import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.w3c.dom.events.Event;
import sistematuristico.AccesoData.CiudadData;
import sistematuristico.Entidades.Ciudad;

/**
 *
 * @author crist
 */
public class ABMCiudad extends javax.swing.JInternalFrame {

    private CiudadData ciudadData = new CiudadData();
    private DefaultTableModel modelo = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    public ABMCiudad() {
        initComponents();
        CrearTabla();
        actualizarTabla();
        botonNuevaCiudad();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelFull = new javax.swing.JPanel();
        jPanelHead = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btnSalir = new javax.swing.JPanel();
        jlabel_exit = new javax.swing.JLabel();
        jPanelBody = new javax.swing.JPanel();
        jPanelNuevo = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtfIdCiudad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfNombre = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtfProvincia = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfPais = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jcbActivo_Inactivo = new javax.swing.JCheckBox();
        jbGuardar_Actualizar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jPanelBuscar = new javax.swing.JPanel();
        jbEliminar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jtfBuscarProvincia = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jCheckBoxEliminados = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jtfBuscarPais = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jtfBuscarCiudad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSeparator3 = new javax.swing.JSeparator();

        jPanelFull.setBackground(new java.awt.Color(56, 63, 79));
        jPanelFull.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanelHead.setBackground(new java.awt.Color(56, 63, 79));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(235, 237, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("ABM de Ciudades");

        jSeparator1.setBackground(new java.awt.Color(235, 237, 255));

        jSeparator2.setBackground(new java.awt.Color(235, 237, 255));

        btnSalir.setBackground(new java.awt.Color(56, 63, 79));
        btnSalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnSalirMousePressed(evt);
            }
        });

        jlabel_exit.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jlabel_exit.setForeground(new java.awt.Color(255, 255, 255));
        jlabel_exit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlabel_exit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/icon_Exit_25px.png"))); // NOI18N

        javax.swing.GroupLayout btnSalirLayout = new javax.swing.GroupLayout(btnSalir);
        btnSalir.setLayout(btnSalirLayout);
        btnSalirLayout.setHorizontalGroup(
            btnSalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnSalirLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jlabel_exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
        );
        btnSalirLayout.setVerticalGroup(
            btnSalirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnSalirLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlabel_exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelHeadLayout = new javax.swing.GroupLayout(jPanelHead);
        jPanelHead.setLayout(jPanelHeadLayout);
        jPanelHeadLayout.setHorizontalGroup(
            jPanelHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeadLayout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addGroup(jPanelHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelHeadLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 174, Short.MAX_VALUE)
                .addComponent(btnSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelHeadLayout.setVerticalGroup(
            jPanelHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHeadLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSalir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jPanelFull.add(jPanelHead, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, -1));

        jPanelBody.setBackground(new java.awt.Color(56, 63, 79));
        jPanelBody.setPreferredSize(new java.awt.Dimension(1000, 540));

        jPanelNuevo.setBackground(new java.awt.Color(56, 63, 79));

        jPanel1.setBackground(new java.awt.Color(56, 63, 79));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(235, 237, 255));
        jLabel3.setText("Id de Ciudad");

        jtfIdCiudad.setBackground(new java.awt.Color(56, 63, 79));
        jtfIdCiudad.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jtfIdCiudad.setForeground(new java.awt.Color(235, 237, 255));
        jtfIdCiudad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(235, 237, 255)));
        jtfIdCiudad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfIdCiudadFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfIdCiudadFocusLost(evt);
            }
        });
        jtfIdCiudad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfIdCiudadKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(235, 237, 255));
        jLabel4.setText("Nombre Ciudad:");

        jtfNombre.setBackground(new java.awt.Color(56, 63, 79));
        jtfNombre.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jtfNombre.setForeground(new java.awt.Color(235, 237, 255));
        jtfNombre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(235, 237, 255)));
        jtfNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfNombreFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNombreFocusLost(evt);
            }
        });
        jtfNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfNombreKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(235, 237, 255));
        jLabel5.setText("Nombre Provincia:");

        jtfProvincia.setBackground(new java.awt.Color(56, 63, 79));
        jtfProvincia.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jtfProvincia.setForeground(new java.awt.Color(235, 237, 255));
        jtfProvincia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(235, 237, 255)));
        jtfProvincia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfProvinciaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfProvinciaFocusLost(evt);
            }
        });
        jtfProvincia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfProvinciaKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(235, 237, 255));
        jLabel6.setText("Nombre Pais:");

        jtfPais.setBackground(new java.awt.Color(56, 63, 79));
        jtfPais.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jtfPais.setForeground(new java.awt.Color(235, 237, 255));
        jtfPais.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(235, 237, 255)));
        jtfPais.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfPaisFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfPaisFocusLost(evt);
            }
        });
        jtfPais.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfPaisKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(235, 237, 255));
        jLabel7.setText("Estado:");

        jcbActivo_Inactivo.setBackground(new java.awt.Color(56, 63, 79));
        jcbActivo_Inactivo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jcbActivo_Inactivo.setForeground(new java.awt.Color(235, 237, 255));
        jcbActivo_Inactivo.setText("Activo / Inactivo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbActivo_Inactivo, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfIdCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jtfNombre, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                        .addComponent(jtfProvincia, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jtfPais, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfIdCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfPais, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbActivo_Inactivo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jbGuardar_Actualizar.setBackground(new java.awt.Color(47, 52, 67));
        jbGuardar_Actualizar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbGuardar_Actualizar.setForeground(new java.awt.Color(235, 237, 255));
        jbGuardar_Actualizar.setText("Guardar");
        jbGuardar_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardar_ActualizarActionPerformed(evt);
            }
        });

        jbNuevo.setBackground(new java.awt.Color(47, 52, 67));
        jbNuevo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbNuevo.setForeground(new java.awt.Color(235, 237, 255));
        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelNuevoLayout = new javax.swing.GroupLayout(jPanelNuevo);
        jPanelNuevo.setLayout(jPanelNuevoLayout);
        jPanelNuevoLayout.setHorizontalGroup(
            jPanelNuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelNuevoLayout.createSequentialGroup()
                .addGroup(jPanelNuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelNuevoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelNuevoLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jbNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbGuardar_Actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );
        jPanelNuevoLayout.setVerticalGroup(
            jPanelNuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNuevoLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanelNuevoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardar_Actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jPanelBuscar.setBackground(new java.awt.Color(56, 63, 79));

        jbEliminar.setBackground(new java.awt.Color(47, 52, 67));
        jbEliminar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbEliminar.setForeground(new java.awt.Color(235, 237, 255));
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbModificar.setBackground(new java.awt.Color(47, 52, 67));
        jbModificar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbModificar.setForeground(new java.awt.Color(235, 237, 255));
        jbModificar.setText("Modificar");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jtfBuscarProvincia.setBackground(new java.awt.Color(56, 63, 79));
        jtfBuscarProvincia.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jtfBuscarProvincia.setForeground(new java.awt.Color(235, 237, 255));
        jtfBuscarProvincia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(235, 237, 255)));
        jtfBuscarProvincia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfBuscarProvinciaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfBuscarProvinciaFocusLost(evt);
            }
        });
        jtfBuscarProvincia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfBuscarProvinciaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfBuscarProvinciaKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(235, 237, 255));
        jLabel8.setText("Nombre Provinia:");

        jCheckBoxEliminados.setBackground(new java.awt.Color(56, 63, 79));
        jCheckBoxEliminados.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBoxEliminados.setForeground(new java.awt.Color(235, 237, 255));
        jCheckBoxEliminados.setText("Mostrar Eliminados");
        jCheckBoxEliminados.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jCheckBoxEliminados.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jCheckBoxEliminados.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxEliminadosStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(235, 237, 255));
        jLabel9.setText("Nombre Pais:");

        jtfBuscarPais.setBackground(new java.awt.Color(56, 63, 79));
        jtfBuscarPais.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jtfBuscarPais.setForeground(new java.awt.Color(235, 237, 255));
        jtfBuscarPais.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(235, 237, 255)));
        jtfBuscarPais.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfBuscarPaisFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfBuscarPaisFocusLost(evt);
            }
        });
        jtfBuscarPais.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfBuscarPaisKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfBuscarPaisKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(235, 237, 255));
        jLabel10.setText("Nombre Ciudad:");

        jtfBuscarCiudad.setBackground(new java.awt.Color(56, 63, 79));
        jtfBuscarCiudad.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jtfBuscarCiudad.setForeground(new java.awt.Color(235, 237, 255));
        jtfBuscarCiudad.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(235, 237, 255)));
        jtfBuscarCiudad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtfBuscarCiudadFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfBuscarCiudadFocusLost(evt);
            }
        });
        jtfBuscarCiudad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfBuscarCiudadKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfBuscarCiudadKeyTyped(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(56, 63, 79));
        jScrollPane1.setForeground(new java.awt.Color(56, 63, 79));

        jTable1.setBackground(new java.awt.Color(56, 63, 79));
        jTable1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(235, 237, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setFocusable(false);
        jTable1.setGridColor(new java.awt.Color(47, 52, 67));
        jTable1.setSelectionBackground(new java.awt.Color(83, 81, 251));
        jTable1.setSelectionForeground(new java.awt.Color(235, 237, 255));
        jTable1.setShowVerticalLines(false);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanelBuscarLayout = new javax.swing.GroupLayout(jPanelBuscar);
        jPanelBuscar.setLayout(jPanelBuscarLayout);
        jPanelBuscarLayout.setHorizontalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBuscarLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
            .addGroup(jPanelBuscarLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBuscarLayout.createSequentialGroup()
                            .addGroup(jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jtfBuscarPais, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                                .addComponent(jtfBuscarCiudad)
                                .addComponent(jtfBuscarProvincia))))
                    .addComponent(jCheckBoxEliminados, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanelBuscarLayout.setVerticalGroup(
            jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBuscarLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addGroup(jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfBuscarCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfBuscarProvincia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfBuscarPais, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxEliminados, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelBuscarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        jSeparator3.setBackground(new java.awt.Color(235, 237, 255));
        jSeparator3.setForeground(new java.awt.Color(235, 237, 255));
        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout jPanelBodyLayout = new javax.swing.GroupLayout(jPanelBody);
        jPanelBody.setLayout(jPanelBodyLayout);
        jPanelBodyLayout.setHorizontalGroup(
            jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBodyLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanelNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(jPanelBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBodyLayout.createSequentialGroup()
                    .addContainerGap(443, Short.MAX_VALUE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(555, Short.MAX_VALUE)))
        );
        jPanelBodyLayout.setVerticalGroup(
            jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBodyLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(jPanelBodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelBodyLayout.createSequentialGroup()
                    .addContainerGap(65, Short.MAX_VALUE)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(62, Short.MAX_VALUE)))
        );

        jPanelFull.add(jPanelBody, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1000, 540));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFull, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelFull, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbGuardar_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardar_ActualizarActionPerformed
        if (jtfIdCiudad.isFocusable()) {
            crearCiudad();
        } else {
            actualizarCiudad();
        }
        actualizarTabla();
    }//GEN-LAST:event_jbGuardar_ActualizarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        modificarCiudad();
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        EliminarDeTabla();
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        botonNuevaCiudad();
    }//GEN-LAST:event_jbNuevoActionPerformed

    // <editor-fold defaultstate="collapsed" desc="textBorderFocus">
    // <editor-fold defaultstate="collapsed" desc="textBorderFocusGained">
    private void jtfIdCiudadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfIdCiudadFocusGained
        textBorderFocusGained((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfIdCiudadFocusGained

    private void jtfNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNombreFocusGained
        textBorderFocusGained((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfNombreFocusGained

    private void jtfProvinciaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfProvinciaFocusGained
        textBorderFocusGained((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfProvinciaFocusGained

    private void jtfPaisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPaisFocusGained
        textBorderFocusGained((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfPaisFocusGained

    private void jtfBuscarCiudadFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBuscarCiudadFocusGained
        textBorderFocusGained((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfBuscarCiudadFocusGained

    private void jtfBuscarProvinciaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBuscarProvinciaFocusGained
        textBorderFocusGained((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfBuscarProvinciaFocusGained

    private void jtfBuscarPaisFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBuscarPaisFocusGained
        textBorderFocusGained((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfBuscarPaisFocusGained
    // </editor-fold>     
    // <editor-fold defaultstate="collapsed" desc="textBorderFocusLost">
    private void jtfIdCiudadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfIdCiudadFocusLost
        textBorderFocusLost((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfIdCiudadFocusLost

    private void jtfNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNombreFocusLost
        textBorderFocusLost((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfNombreFocusLost

    private void jtfProvinciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfProvinciaFocusLost
        textBorderFocusLost((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfProvinciaFocusLost

    private void jtfPaisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfPaisFocusLost
        textBorderFocusLost((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfPaisFocusLost

    private void jtfBuscarCiudadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBuscarCiudadFocusLost
        textBorderFocusLost((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfBuscarCiudadFocusLost

    private void jtfBuscarProvinciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBuscarProvinciaFocusLost
        textBorderFocusLost((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfBuscarProvinciaFocusLost

    private void jtfBuscarPaisFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBuscarPaisFocusLost
        textBorderFocusLost((JTextField) evt.getComponent());
    }//GEN-LAST:event_jtfBuscarPaisFocusLost
// </editor-fold> 
    // </editor-fold> 
    private void jtfBuscarCiudadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscarCiudadKeyReleased
        actualizarTabla();
    }//GEN-LAST:event_jtfBuscarCiudadKeyReleased

    private void jtfBuscarProvinciaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscarProvinciaKeyReleased
        actualizarTabla();
    }//GEN-LAST:event_jtfBuscarProvinciaKeyReleased

    private void jtfBuscarPaisKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscarPaisKeyReleased
        actualizarTabla();
    }//GEN-LAST:event_jtfBuscarPaisKeyReleased

    private void jCheckBoxEliminadosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxEliminadosStateChanged
        actualizarTabla();
    }//GEN-LAST:event_jCheckBoxEliminadosStateChanged
    // <editor-fold defaultstate="collapsed" desc="KeyTyped">
    private void jtfIdCiudadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfIdCiudadKeyTyped
        KeyPress(evt,"numero");
    }//GEN-LAST:event_jtfIdCiudadKeyTyped

    private void jtfNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfNombreKeyTyped
       KeyPress(evt,"letra");
    }//GEN-LAST:event_jtfNombreKeyTyped

    private void jtfProvinciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfProvinciaKeyTyped
        KeyPress(evt,"letra");
    }//GEN-LAST:event_jtfProvinciaKeyTyped

    private void jtfPaisKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPaisKeyTyped
        KeyPress(evt,"letra");
    }//GEN-LAST:event_jtfPaisKeyTyped

    private void jtfBuscarCiudadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscarCiudadKeyTyped
        KeyPress(evt,"letra");
    }//GEN-LAST:event_jtfBuscarCiudadKeyTyped

    private void jtfBuscarProvinciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscarProvinciaKeyTyped
        KeyPress(evt,"letra");
    }//GEN-LAST:event_jtfBuscarProvinciaKeyTyped

    private void jtfBuscarPaisKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscarPaisKeyTyped
        KeyPress(evt,"letra");
    }//GEN-LAST:event_jtfBuscarPaisKeyTyped
    // </editor-fold> 
    private void btnSalirMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSalirMousePressed
        this.dispose();
    }//GEN-LAST:event_btnSalirMousePressed
    
    private void CrearTabla() {
        JTableHeader TblHeader = jTable1.getTableHeader();
        TblHeader.setBackground(new Color(56, 63, 79));
        TblHeader.setForeground(new Color(235, 237, 255));

        jScrollPane1.getViewport().setBackground(new Color(56, 63, 79)); //fondo sin grilla de color
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Provincia");
        modelo.addColumn("Pais");

        jTable1.setModel(modelo);
        jTable1.setEnabled(true);
        jTable1.setRowSelectionAllowed(true);
    }

    private void textBorderFocusGained(JTextField textField) {
        textField.setBorder(new LineBorder(new Color(83, 81, 251), 3));
    }

    private void textBorderFocusLost(JTextField textField) {
        textField.setBorder(new LineBorder(new Color(235, 237, 255), 1));
    }

    private void ActualizarDatosTabla() {
        if (ciudadData.listarCiudades() != null) {
            for (Ciudad ciudad : ciudadData.listarCiudades()) {
                if (!jCheckBoxEliminados.isSelected() ? ciudad.isEstado() : !ciudad.isEstado()) {
                    if (ciudad.getNombre().toUpperCase().startsWith(jtfBuscarCiudad.getText().toUpperCase())) {
                        if (ciudad.getProvincia().toUpperCase().startsWith(jtfBuscarProvincia.getText().toUpperCase())) {
                            if (ciudad.getPais().toUpperCase().startsWith(jtfBuscarPais.getText().toUpperCase())) {
                                modelo.addRow(new Object[]{ciudad.getIdCiudad(), ciudad.getNombre(), ciudad.getProvincia(), ciudad.getPais()});
                            }
                        }
                    }
                }
            }
        } else {
            System.out.println("No hay datos en el array");
        }
    }

    private void borrarfila() {
        int f = jTable1.getRowCount() - 1;
        for (; f >= 0; f--) {
            modelo.removeRow(f);
        }
    }

    private void actualizarTabla() {
        borrarfila();
        ActualizarDatosTabla();
    }

    private void limpiarFiltros() {
        jtfBuscarCiudad.setText("");
        jtfBuscarProvincia.setText("");
        jtfBuscarPais.setText("");
    }

    private void limpiarTextFields() {
        jtfIdCiudad.setText("");
        jtfNombre.setText("");
        jtfProvincia.setText("");
        jtfPais.setText("");
        jcbActivo_Inactivo.setSelected(true);
    }

    private void EliminarDeTabla() {
        int filas = jTable1.getSelectedRow();
        if (filas != -1) {
            int idCiudad = (int) jTable1.getValueAt(filas, 0);
            if (ciudadData.buscarCiudad(idCiudad).isEstado()) {
                ciudadData.BajaCiudad(idCiudad);
            } else {
                String title = "Eliminacion Permanente";
                String message = "Si elimina un dato ya eliminado no se podra recuperar\nEsta Seguro?";
                int respuesta = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
                if (respuesta == JOptionPane.YES_OPTION) {
                    ciudadData.BajaRealCiudad(idCiudad);
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila");
        }
        limpiarFiltros();
        actualizarTabla();
    }

    private void modificarCiudad() {
        int filas = jTable1.getSelectedRow();
        if (filas != -1) {
            int idCiudad = (int) jTable1.getValueAt(filas, 0);
            Ciudad ciudad = ciudadData.buscarCiudad(idCiudad);
            jtfIdCiudad.setEditable(false);
            jtfIdCiudad.setFocusable(false);
            jtfIdCiudad.setBackground(new Color(66, 66, 66));
            jbGuardar_Actualizar.setText("Actualizar");
            jtfIdCiudad.setText("" + ciudad.getIdCiudad());
            jtfNombre.setText(ciudad.getNombre());
            jtfProvincia.setText(ciudad.getProvincia());
            jtfPais.setText(ciudad.getPais());
            jcbActivo_Inactivo.setSelected(ciudad.isEstado());
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una fila");
        }
    }

    private void crearCiudad() {
        try {
            String nombre = jtfNombre.getText();
            String provincia = jtfProvincia.getText();
            String pais = jtfPais.getText();
            Boolean estado = jcbActivo_Inactivo.isSelected();
            if (jtfIdCiudad.getText().isEmpty()) {
                Ciudad ciudad = new Ciudad(nombre, pais, provincia, estado);
                ciudadData.AltaCiudad(ciudad);
                botonNuevaCiudad();
            } else {
                int IdCiudad = Integer.parseInt(jtfIdCiudad.getText());
                if (ciudadData.buscarCiudad(IdCiudad) == null) {
                    Ciudad ciudad = new Ciudad(IdCiudad, nombre, pais, provincia, estado);
                    ciudadData.AltaCiudad(ciudad);
                    botonNuevaCiudad();
                } else {
                    String title = "IdCiudad NO Disponible";
                    String message = "Ya existe una ciudad con ese ID\n¿Quiere generar un ID Automaticamente?";
                    int respuesta = JOptionPane.showConfirmDialog(null, message, title, JOptionPane.YES_NO_OPTION);
                    if (respuesta == JOptionPane.YES_OPTION) {
                        Ciudad ciudad = new Ciudad(nombre, pais, provincia, estado);
                        ciudadData.AltaCiudad(ciudad);
                        botonNuevaCiudad();
                    }
                }
            }

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "En el campo IdCiduad solo deben ingresarse numeros");
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No debe haber campos vacios");
        }
    }

    private void actualizarCiudad() {
        try {
            String nombre = jtfNombre.getText();
            String provincia = jtfProvincia.getText();
            String pais = jtfPais.getText();
            Boolean estado = jcbActivo_Inactivo.isSelected();
            Ciudad ciudad = new Ciudad(nombre, pais, provincia, estado);
            ciudadData.ModificacionCiudad(Integer.parseInt(jtfIdCiudad.getText()), ciudad);
            botonNuevaCiudad();
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "En el campo IdCiduad solo deben ingresarse numeros");
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No debe haber campos vacios");
        }
    }

    private void botonNuevaCiudad() {
        limpiarTextFields();
        jtfIdCiudad.setEditable(true);
        jtfIdCiudad.setFocusable(true);
        jtfIdCiudad.setBackground(new Color(56, 63, 79));
        jbGuardar_Actualizar.setText("Guardar");
    }

    private void KeyPress(java.awt.event.KeyEvent evt, String Opcion) {
        if (Opcion.equalsIgnoreCase("letra")) {
            char c = evt.getKeyChar();
            if (Character.isDigit(c)) {
                evt.consume(); // Consume el evento si el carácter no es un número
            }
        }
        if (Opcion.equalsIgnoreCase("numero")) {
            char c = evt.getKeyChar();
            if (!Character.isDigit(c)) {
                evt.consume(); // Consume el evento si el carácter no es un número
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnSalir;
    private javax.swing.JCheckBox jCheckBoxEliminados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelBody;
    private javax.swing.JPanel jPanelBuscar;
    private javax.swing.JPanel jPanelFull;
    private javax.swing.JPanel jPanelHead;
    private javax.swing.JPanel jPanelNuevo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar_Actualizar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JCheckBox jcbActivo_Inactivo;
    private javax.swing.JLabel jlabel_exit;
    private javax.swing.JTextField jtfBuscarCiudad;
    private javax.swing.JTextField jtfBuscarPais;
    private javax.swing.JTextField jtfBuscarProvincia;
    private javax.swing.JTextField jtfIdCiudad;
    private javax.swing.JTextField jtfNombre;
    private javax.swing.JTextField jtfPais;
    private javax.swing.JTextField jtfProvincia;
    // End of variables declaration//GEN-END:variables
}
